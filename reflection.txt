Command line: The command line is like talking to your computer in a secret language where you type words to make it do things instead of clicking with a mouse.

Timebox Guidelines:Due to having a bad routine in the first place i found it hard to stick to the guidelines but it gave me a better idea of the time i should spend on certain topics/areas.

5Commands: 'cd'Change Directory   'ls'Listing  'mkdir'Make Directory  'del' Deletes files  '../.' used with cd to go up a file or stay in the same file.

All of this was new to me , previously i have worked through Google drive as a directory during school but we dragged and dropped files we didnt use and go through using commandlines.

Git n Github
Git: is like a magic notebook that remembers every change you make to your writing or drawings. You can use it by yourself to keep track of your work.

GitHub: is like a library where you can store your magic notebooks. It's not just for you; others can also read your notebooks, make copies, and even help you write in them.

Analogy:Git is like a toolbox you keep at home, where you can work on your projects and keep track of your tools. GitHub is like a community workshop where you can showcase your projects, collaborate with others, and access a wider range of tools and resources 
Will you remember:I do think i will remeber vaguely the difference between git and github but not as indepth as i do right now

Timebox:No i did not stick to the timebox as i have the flu so i had breaks inbetween, but time at the desk yes i did kind of .

Git Workflow:A Git workflow is like a recipe for working with others on a project using Git. It tells you what steps to follow, like how to make changes, share them with others, and combine everyone's work together.

Learning:It was a easy task to follow along and work with but i did get abit confused with what i was suppose to be doing and what i wasnt suppose to be doing but i think i got there in the end. i did have to have a break but once i cameback i knew where i was and what i was suppose to be doing.

I would most definetly change the time i took to do it , i feel like it was a quick learning but i made it harder for myself but i do know what to work on now.

stage n commit:When you're working on something, "staging" is like getting all your materials ready, and "committing" is like saving your progress. Once you've committed, it's like locking in your work so you can't accidentally change or lose it.

Main:The 'main' branch is like the main folder where all the project's files are kept. It's where the latest and most stable version of the project is stored. When you start a project, you usually start with the 'main' branch.

Why:The reason for creating a branch is to allow you to work on new features , fixes and or experiment without affecting all previous code. its like making a copy of your project where you can make changesand then you can later decide to merge them changes back to the main branchg.

Concepts: The concepts dont feel too difficult but i still seem to be struggling with what im suppose to follow and what im not suppose too , itd be good if there was a sheet of possible errors and fixes , i know i should be asking in the discord but i feel like ill abuse that right.










